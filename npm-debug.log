0 info it worked if it ends with ok
1 verbose cli [ '/Users/chris/opt/node/bin/node',
1 verbose cli   '/Users/chris/opt/node/bin/npm',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'toffee' ]
2 info using npm@1.1.66
3 info using node@v0.8.15
4 verbose read json /Users/chris/opt/node/lib/package.json
5 verbose read json /Users/chris/opt/node/lib/package.json
6 verbose cache add [ 'toffee', null ]
7 silly cache add name=undefined spec="toffee" args=["toffee",null]
8 verbose parsed url { pathname: 'toffee', path: 'toffee', href: 'toffee' }
9 silly lockFile c6173d70-toffee toffee
10 verbose lock toffee /Users/chris/.npm/c6173d70-toffee.lock
11 silly lockFile c6173d70-toffee toffee
12 verbose addNamed [ 'toffee', '' ]
13 verbose addNamed [ null, '' ]
14 silly lockFile 78f759a8-toffee toffee@
15 verbose lock toffee@ /Users/chris/.npm/78f759a8-toffee.lock
16 silly addNameRange { name: 'toffee', range: '', hasData: false }
17 verbose url raw toffee
18 verbose url resolving [ 'https://registry.npmjs.org/', './toffee' ]
19 verbose url resolved https://registry.npmjs.org/toffee
20 info trying registry request attempt 1 at 16:11:48
21 http GET https://registry.npmjs.org/toffee
22 http 200 https://registry.npmjs.org/toffee
23 silly registry.get cb [ 200,
23 silly registry.get   { vary: 'Accept',
23 silly registry.get     server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
23 silly registry.get     etag: '"8OU4N6W8D5PG8M4PAWL4P9LDR"',
23 silly registry.get     date: 'Thu, 13 Dec 2012 21:10:56 GMT',
23 silly registry.get     'content-type': 'application/json',
23 silly registry.get     'content-length': '211529' } ]
24 silly addNameRange number 2 { name: 'toffee', range: '', hasData: true }
25 silly addNameRange versions [ 'toffee',
25 silly addNameRange   [ '0.0.0',
25 silly addNameRange     '0.0.1',
25 silly addNameRange     '0.0.2',
25 silly addNameRange     '0.0.3',
25 silly addNameRange     '0.0.4',
25 silly addNameRange     '0.0.5',
25 silly addNameRange     '0.0.6',
25 silly addNameRange     '0.0.7',
25 silly addNameRange     '0.0.8',
25 silly addNameRange     '0.0.11',
25 silly addNameRange     '0.0.12',
25 silly addNameRange     '0.0.14',
25 silly addNameRange     '0.0.15',
25 silly addNameRange     '0.0.16',
25 silly addNameRange     '0.0.17',
25 silly addNameRange     '0.0.18',
25 silly addNameRange     '0.0.19',
25 silly addNameRange     '0.0.20',
25 silly addNameRange     '0.0.21',
25 silly addNameRange     '0.0.23',
25 silly addNameRange     '0.0.24',
25 silly addNameRange     '0.0.25',
25 silly addNameRange     '0.0.26',
25 silly addNameRange     '0.0.27',
25 silly addNameRange     '0.0.28',
25 silly addNameRange     '0.0.30',
25 silly addNameRange     '0.0.32',
25 silly addNameRange     '0.0.33',
25 silly addNameRange     '0.0.34',
25 silly addNameRange     '0.0.35',
25 silly addNameRange     '0.0.36',
25 silly addNameRange     '0.0.37',
25 silly addNameRange     '0.0.38',
25 silly addNameRange     '0.0.39',
25 silly addNameRange     '0.0.40',
25 silly addNameRange     '0.0.41',
25 silly addNameRange     '0.0.42',
25 silly addNameRange     '0.0.43',
25 silly addNameRange     '0.0.44',
25 silly addNameRange     '0.0.45',
25 silly addNameRange     '0.0.47',
25 silly addNameRange     '0.0.48',
25 silly addNameRange     '0.0.49',
25 silly addNameRange     '0.0.50',
25 silly addNameRange     '0.0.51',
25 silly addNameRange     '0.0.52',
25 silly addNameRange     '0.0.53',
25 silly addNameRange     '0.0.55' ] ]
26 verbose addNamed [ 'toffee', '0.0.55' ]
27 verbose addNamed [ '0.0.55', '0.0.55' ]
28 silly lockFile ab22178e-toffee-0-0-55 toffee@0.0.55
29 verbose lock toffee@0.0.55 /Users/chris/.npm/ab22178e-toffee-0-0-55.lock
30 verbose read json /Users/chris/.npm/toffee/0.0.55/package/package.json
31 silly lockFile ab22178e-toffee-0-0-55 toffee@0.0.55
32 silly lockFile 78f759a8-toffee toffee@
33 silly resolved [ { name: 'toffee',
33 silly resolved     description: 'A NodeJs, Express 3.x, Express 2.x, and browser-side templating language based on CoffeeScript with slicker tokens and syntax. Built with love at OkCupid.',
33 silly resolved     version: '0.0.55',
33 silly resolved     directories: { lib: './lib' },
33 silly resolved     main: 'index.js',
33 silly resolved     author: { name: 'Chris Coyne', email: 'ccoyne77@gmail.com' },
33 silly resolved     bin: { toffee: './bin/toffee' },
33 silly resolved     dependencies:
33 silly resolved      { 'coffee-script': '*',
33 silly resolved        commander: '*',
33 silly resolved        'uglify-js': '2.*',
33 silly resolved        mkdirp: '*' },
33 silly resolved     devDependencies: { jison: '*' },
33 silly resolved     repository: { type: 'git', url: 'http://github.com/malgorithms/toffee' },
33 silly resolved     licenses: [ [Object] ],
33 silly resolved     readme: 'TOFFEE\n=========\n*Toffee* is a templating language developed at OkCupid, based on the simplicity and beauty of CoffeeScript.\n * it works with nodeJS (including Express 2.x and 3.x)\n * it works in the browser, too!\n * it does not require that you use CoffeeScript elsewhere in your project.\n\nTable of Contents\n=================\n   * [1. Language Basics](#section_1)\n   * [2. Notes on Escaping](#section_2)\n   * [3. Common Questions](#section_3)\n   * [4. Installation & Usage (Node, Express, and the browser)](#section_4)\n\n## <a name="section_1"></a> Language Basics\n\nPrinting variables in Toffee is easy. Just use CoffeeScript\'s #{} syntax:\n```html\n<div class="welcome">\n   Hey, #{user.name}. \n   #{flirty_welcome_msg}\n</div>\n```\n\nThe `#{}` syntax is powerful, so be responsible.\n\n```html\n<p>\n  You have #{(limb for limb in limbs when limb.has_a_hand).length} arms worth keeping.\n</p>\n```\n\nIncluding other files is possible thanks to the function `partial`. This works in both Express and the browser.\n\n```html\n<p>\n   #{partial "navigation.toffee", {username: user.name, age: 22} }\n</p>\n```\n\nBut the greatest pleasure arises when you enter\n`coffee mode`. Note the `{# ... #}` region, where you can write multiple lines of CoffeeScript.\n\n```html\n<p>\n  {#\n    ten_numbers = [1,3,2,4,5,8,6,7,69, Math.random()]\n    ten_numbers.sort (a,b) -> b - a\n  #}\n  The largest number I can even think of is #{ten_numbers[0]}.\n</p>\n```\n\nAgainst all odds, inside `coffee mode`, you can switch back to `toffee mode` with `{: ... :}`. It\'s endlessly nestable.\n\n```html\n<div class="wrapper">\n <div class="projects">\n  {#\n     if projects.length\n      for project in projects {:\n        <div class="project">\n          <a href="#{project.url}">#{project.name}</a>\n        </div>\n      :}\n  #}\n </div>\n</div>\n```\n\nThis bracket and nesting syntax avoids a lot of large, ugly regions, such\nas EJS\'s unethical `<% } %>`. It\'s been wrong for thousands of years\nto have control markers surrounded by other control\nmarkers, and it is still wrong.  Witness:\n\nEJS, verbose and weak.\n```\n<% for(var i=0; i<supplies.length; i++) {%>\n   <li><%= supplies[i] %></li>\n<% } %>\n```\n\nTOFFEE, so elegant and proud.\n```html\n{# \n  for supply in supplies {:<li>#{supply}</li>:} \n#}\n```\n\nOr, using Toffee\'s `print`:\n```html\n{# \n  for supply in supplies \n    print "<li>#{supply}</li>"\n#}\n```\n\nThese are slightly different, as `print` outputs raw text, while `#{}` used in toffee mode safely escapes HTML or JSON. This escaping\nescaping is customizable. More on that below.\n\nWith nested code, indentation of your CoffeeScript is magically maintained.\n\n```html\n{#\n   if user.is_drunk\n     for name, profile of friends when profile.is_responsible {:\n        <p class="designated-driver-candidate">\n          You know, #{name} would make a great designated driver.\n          And she only lives #{profile.distance}km away.\n          {#\n             if profile.car? {: And wow, she drives a #{profile.car.model} :}\n             else            {: But, alas, she has no wheels. :}\n          #}\n        </p>\n    :}\n#}\n```\n\n### By now, you probably have questions about indenting\n\nSince CoffeeScript is sensitive to indenting, so is Toffee.\n\nBut...Toffee doesn\'t care where you start your CoffeeScript. When you want to create a coffee block, \nyou can indent it however you like, and all that matters is that the internal, \nrelative indenting is correct. For example, these are identical:\n\n```html\n<p>\n\t{#\n\t      if user.is_awesome {:\n\t        YAY!\n\t      :}\t      \n\t#}\n</p>\n<p>\n{#\nif user.is_awesome {:\n  YAY!\n:}\n#}\n</p>\n```\n\nIn other words, feel free to pick whatever indentation baseline you want when entering a region of CoffeeScript.\n\nNote that where you put your toffee mode tokens (`{:`) is important, as the following illustrates:\n\n```html\n<p>\n {#\n    if x is true\n      if y is true\n        if z is true\n          w = true\n      {: \n      \tx is true! Dunno anything about y or z, though. \n      :}\n #}\n</p>\n```\n\nWhy? Because this is roughly the same as saying:\n\n```html\n<p>\n {#\n    if x is true\n      if y is true\n        if z is true\n          w = true\n      print "\\n       x is true! Dunno anything about y or z, though.\\n     "\n #}\n</p>\n```\n\nOne syntactic convenience: if you start a `{:` on the same line as some preceeding CoffeeScript, it\'s \ntreated the same as putting it on a new line and indenting one level.\nSo the following three conditionals are the same:\n\n```html\n{#\n  if x is true\n    {:yay:}\n#}\n```\n\n```html\n{#\n  if x is true {:yay:}\n#}\n```\n\n```html\n{#\n  if x is true {:\n    yay\n  :}\n#}\n```\n\nThe third example has extra whitespace around the "yay," but otherwise the three are logically identical.\n\n### One gotcha with indenting\n\n\n\nTHIS IS AN ERROR\n```html\n{# if x is 0 {:Yay!:}\n   else      {:Burned:}\n#}\n```\n\nNote that the indentations before the \'if\' and the \'else\' are technically different,\nas the `if` has only 1 space before it, and the `else` has 2. This is better style anyway:\n\nGOOD\n```html\n{# \n   if x is 0 {:Yay!:}\n   else      {:Burned:}\n#}\n```\n\nWith a single line of CoffeeScript, feel free to keep it all on one line:\n\nGOOD\n```html\n<div>{# foo = "bar" #}</div>\n```\n\n\n## Commenting out a block of toffee\n\nIn toffee mode, you can comment out a region with `{##` and `##}`.\n\n```html\n<div>\n I don\'t want to output this anymore...\n {##\n     <p>An ode to Ruby on Rails</p>\n     <p>#{partial \'ode.toffee\'}</p>\n ##}\n</div>\n```\n\n\n## <a name="section_2"></a>Escaping\n\nIn your CoffeeScript, the `print` function lets you print the raw value of a variable:\n\n```\n{#\n  danger_code = "<script>alert(\'Eat a bag.\');</script>"\n  print danger_code\n#}\n```\n\nBut in toffee mode, `#{some_expression}` output is escaped intelligently by default:\n\n```html\n<!-- escapes the HTML -->\n<p>#{danger_code}</p>\n```\n\nYou can control the escaping, but here are the defaults: \n\n * if it\'s a string or scalar, it is escaped for HTML safety.\n * it\'s an array or object, it is converted to JSON.\n\n### Custom Escaping\n\nYou can bypass the above rules.\n\n * `#{json foo}`: this outputs foo as JSON.\n * `#{raw foo}`: this outputs foo in raw text.\n * `#{html foo}`: this outputs foo, escaped as HTML. For a scalar, it\'s the same as `#{foo}`, but it\'s available in case you \n(1) override the default escaping or (2) turn off auto-escaping (both explained below).\n * `#{partial "foo.toffee"}` and `#{snippet "foo.toffee"}`: unescaped, since you don\'t want to escape your own templates\n\nWhen any of the functions mentioned above are leftmost in a `#{}` token in toffee mode, their output is left untouched by the \nbuilt in escape function.\n\nThese functions are also available to you in coffee mode.\n\n```html\n<p>\n\tWant to read some JSON, human?\n\t{#\n\t   foo = [1,2,3, {bar: "none"}]\n\t   foo_as_json_as_html = html json foo\n\t   print foo_as_json_as_html\n\t#}\n</p>\n```\n\n*Note!*  if you pass a variable to the template called `json`, `raw`, or `html`, Toffee won\'t create these helper functions, which would override your vars.\nIn this case, you can access the escape functions through their official titles, `__toffee.raw`, etc.\n\nOverriding the default `escape`:\n * If you pass a variable to your template called `escape`, this will be used as the default escape. In toffee mode, everything inside `#{}` that isn\'t subject to an above-mentioned exception will go through your `escape` function.\n\nTurning off autoescaping entirely:\n * If you set `autoEscape: false` when creating the engine, the default will be raw across your project. (See more on that below under Express 3.x settings.)\n * Alternatively, you could pass the var `escape: (x) -> x` to turn off escaping for a given template.\n\n## <a name="section_3"></a>Common Questions\n\n#### How does it compare to eco?\n\nEco is another CoffeeScript templating language and inspiration for Toffee.\nThe syntaxes are pretty different, so pick the one you prefer.\n\nOne big Toffee advantage: multiple lines of CoffeeScript just look like CoffeeScript. Compare:\n\nECO\n```\n<% if @projects.length: %>\n  <% for project in @projects: %>\n    <% if project.is_active: %>\n      <p><%= project.name %> | <%= project.description %></p>\n    <% end %>\n  <% end %>\n<% end %>\n```\n\nTOFFEE\n```html\n{#\n   if projects.length\n    for project in projects\n      if project.is_active {:\n        <p>#{project.name} | #{project.description}</p>\n      :}\n#}\n```\n\nWith Toffee\'s syntax, brackets enclose regions not directives, so your editor \nwill let you collapse and expand sections of code. And if you click on one of the brackets in most\neditors, it will highlight the matching bracket.\n\n#### Does it cache templates?\n\nIn Express 2.0, that\'s up to Express. When used in Express 3.0, Toffee asynchronously monitors known templates and recompiles them in the background when necessary. So you don\'t need to restart your production webserver whenever you edit a template.\n\n#### Does it find line numbers in errors?\n\nYes, Toffee does a very good job of that. There are 3 possible places you can hit an error in Toffee: \n * in the language itself, say a parse error\n * in the CoffeeScript, preventing it from compiling to JS\n * runtime, in the final JS\n\nStack traces are converted to lines in Toffee and show you where the problem is. \nBy default when Toffee hits an error it replies with some pretty-printed HTML showing you the problem. \nThis can be overridden, as explained below in the Express 3.0 section.\n\n### Does it support partials? (a.k.a includes)\n\nYes.  In Express 2.0, Express itself is responsible for including other files, and they call this system "partials." In Express 3.0 and in the browser, \nToffee defines the `partial` function, and it works as you\'d expect. \n\n```html\n<div>#{partial \'../foo/bar.toffee\', name: "Chris"}</div>\n```\n\nInside a region of CoffeeScript, you can print or capture the result of a partial.\n```html\n<div>\n{#\n   if session\n      print partial \'user_menu.toffee\', info: session.info\n   else\n      print partial \'guest_menu.toffee\'\n#}\n</div>\n```\n\nLike Express\'s `partial` function, Toffee\'s function passes all available vars to the child template.\nFor example, in the above code, `session` would also be available in the user_menu.toffee file. If you don\'t want this scoping, use Toffee\'s `snippet` function, which sandboxes it:\n\n```\n{#\n   if session\n      print partial \'user.toffee\', info: session.info # session will also be passed\n      print snippet \'user.toffee\', info: session.info # session will not be passed\n#}\n```\n\n#### Does it support `layout`?\n\nYes, this works in NodeJS and Express 3.0, emulating the Express 2.0 way. The var `layout` is considered special, and should\nbe the path to your layout file.\n\n## <a name="section_4"></a>Installation & Usage\n\n * [Using Toffee in NodeJS](https://github.com/malgorithms/toffee/wiki/NodeJS-Usage)\n * [Using Toffee in Express 3](https://github.com/malgorithms/toffee/wiki/Express3-Usage)\n * [Using Toffee in Express 2](https://github.com/malgorithms/toffee/wiki/Express2-Usage)\n * [Using Toffee in the Browser](https://github.com/malgorithms/toffee/wiki/Browser-Usage)\n\n\ncontributing & asking for fixes.\n=================\nIf you have a problem with Toffee let me know, and I\'ll fix it ASAP.\n\nAlso, I\'m likely to accept good pull requests.\n\nIf you\'d like to edit code for this project, note that you should always edit the `.coffee` files,\nas the `.js` files are generated automatically by building.\n\nTo build\n```\n> cake build\n```\n\nTo make sure you didn\'t break something\n```\n> coffee tests/run_cases.coffee\n```\n\n',
33 silly resolved     readmeFilename: 'README.md',
33 silly resolved     _id: 'toffee@0.0.55',
33 silly resolved     _from: 'toffee' } ]
34 info install toffee@0.0.55 into /Users/chris/opt/node/lib
35 info installOne toffee@0.0.55
36 verbose from cache /Users/chris/.npm/toffee/0.0.55/package/package.json
37 info /Users/chris/opt/node/lib/node_modules/toffee unbuild
38 verbose read json /Users/chris/opt/node/lib/node_modules/toffee/package.json
39 info preuninstall toffee@0.0.52
40 info uninstall toffee@0.0.52
41 verbose true,/Users/chris/opt/node/lib/node_modules,/Users/chris/opt/node/lib/node_modules unbuild toffee@0.0.52
42 verbose /Users/chris/opt/node/bin,[object Object] binRoot
43 info postuninstall toffee@0.0.52
44 verbose tar unpack /Users/chris/.npm/toffee/0.0.55/package.tgz
45 silly lockFile 4fe082c3-opt-node-lib-node-modules-toffee /Users/chris/opt/node/lib/node_modules/toffee
46 verbose lock /Users/chris/opt/node/lib/node_modules/toffee /Users/chris/.npm/4fe082c3-opt-node-lib-node-modules-toffee.lock
47 silly gunzTarPerm modes [ '755', '644' ]
48 silly gunzTarPerm extractEntry package.json
49 silly gunzTarPerm extractEntry README.md
50 silly gunzTarPerm extractEntry LICENSE
51 silly gunzTarPerm extractEntry index.js
52 silly gunzTarPerm extractEntry toffee.js
53 silly gunzTarPerm extractEntry Cakefile
54 silly gunzTarPerm extractEntry lib/README.md
55 silly gunzTarPerm extractEntry lib/command_line.js
56 silly gunzTarPerm extractEntry lib/consts.js
57 silly gunzTarPerm extractEntry lib/engine.js
58 silly gunzTarPerm extractEntry lib/errorHandler.js
59 silly gunzTarPerm extractEntry lib/toffee_lang.js
60 silly gunzTarPerm extractEntry lib/utils.js
61 silly gunzTarPerm extractEntry lib/view.js
62 silly gunzTarPerm extractEntry lib/coffee-script/browser.js
63 silly gunzTarPerm extractEntry lib/coffee-script/command.js
64 silly gunzTarPerm extractEntry lib/coffee-script/grammar.js
65 silly gunzTarPerm extractEntry lib/coffee-script/helpers.js
66 silly gunzTarPerm extractEntry lib/coffee-script/index.js
67 silly gunzTarPerm extractEntry lib/coffee-script/coffee-script.js
68 silly gunzTarPerm extractEntry lib/coffee-script/nodes.js
69 silly gunzTarPerm extractEntry lib/coffee-script/optparse.js
70 silly gunzTarPerm extractEntry lib/coffee-script/parser.js
71 silly gunzTarPerm extractEntry lib/coffee-script/repl.js
72 silly gunzTarPerm extractEntry lib/coffee-script/rewriter.js
73 silly gunzTarPerm extractEntry lib/coffee-script/cake.js
74 silly gunzTarPerm extractEntry lib/coffee-script/scope.js
75 silly gunzTarPerm extractEntry lib/coffee-script/lexer.js
76 silly gunzTarPerm extractEntry index.coffee
77 silly gunzTarPerm extractEntry src/command_line.coffee
78 silly gunzTarPerm extractEntry src/consts.coffee
79 silly gunzTarPerm extractEntry src/engine.coffee
80 silly gunzTarPerm extractEntry src/errorHandler.coffee
81 silly gunzTarPerm extractEntry src/toffee.jison
82 silly gunzTarPerm extractEntry src/utils.coffee
83 silly gunzTarPerm extractEntry src/view.coffee
84 silly gunzTarPerm extractEntry test/cases/include_techniques/vars.js
85 silly gunzTarPerm extractEntry test/cases/include_techniques/input.toffee
86 silly gunzTarPerm extractEntry test/cases/include_techniques/message.toffee
87 silly gunzTarPerm extractEntry test/cases/include_techniques/output.toffee
88 silly gunzTarPerm extractEntry test/cases/big_file/input.toffee
89 silly gunzTarPerm extractEntry test/cases/big_file/output.toffee
90 silly gunzTarPerm extractEntry test/cases/custom_escape/vars.js
91 silly gunzTarPerm extractEntry test/cases/custom_escape/input.toffee
92 silly gunzTarPerm extractEntry test/cases/custom_escape/output.toffee
93 silly gunzTarPerm extractEntry test/cases/eco_compare/input.toffee
94 silly gunzTarPerm extractEntry test/cases/eco_compare/output.toffee
95 silly gunzTarPerm extractEntry test/cases/escape/input.toffee
96 silly gunzTarPerm extractEntry test/cases/escape/output.toffee
97 silly gunzTarPerm extractEntry test/cases/hello_world/vars.js
98 silly gunzTarPerm extractEntry test/cases/hello_world/input.toffee
99 silly gunzTarPerm extractEntry test/cases/hello_world/output.toffee
100 silly gunzTarPerm extractEntry test/cases/hello_world/temp.toffee
101 silly gunzTarPerm extractEntry test/cases/include_order/vars.js
102 silly gunzTarPerm extractEntry test/cases/include_order/child.toffee
103 silly gunzTarPerm extractEntry test/cases/include_order/input.toffee
104 silly gunzTarPerm extractEntry test/cases/include_order/output.toffee
105 silly gunzTarPerm extractEntry test/cases/include_recursion/vars.js
106 silly gunzTarPerm extractEntry test/cases/include_recursion/input.toffee
107 silly gunzTarPerm extractEntry test/cases/include_recursion/output.toffee
108 silly gunzTarPerm extractEntry test/cases/comments/vars.js
109 silly gunzTarPerm extractEntry test/cases/comments/input.toffee
110 silly gunzTarPerm extractEntry test/cases/comments/output.toffee
111 silly gunzTarPerm extractEntry test/cases/indent_attack/vars.js
112 silly gunzTarPerm extractEntry test/cases/indent_attack/input.toffee
113 silly gunzTarPerm extractEntry test/cases/indent_attack/output.toffee
114 silly gunzTarPerm extractEntry test/cases/junk/input.toffee
115 silly gunzTarPerm extractEntry test/cases/junk/output.toffee
116 silly gunzTarPerm extractEntry test/cases/lambda_fns/input.toffee
117 silly gunzTarPerm extractEntry test/cases/lambda_fns/output.toffee
118 silly gunzTarPerm extractEntry test/cases/multiline_interpolation/foo.toffee
119 silly gunzTarPerm extractEntry test/cases/multiline_interpolation/input.toffee
120 silly gunzTarPerm extractEntry test/cases/multiline_interpolation/output.toffee
121 silly gunzTarPerm extractEntry test/cases/plaintext/input.toffee
122 silly gunzTarPerm extractEntry test/cases/plaintext/output.toffee
123 silly gunzTarPerm extractEntry test/cases/snippets/vars.js
124 silly gunzTarPerm extractEntry test/cases/snippets/foo/bar/body.toffee
125 silly gunzTarPerm extractEntry test/cases/snippets/foo/message.toffee
126 silly gunzTarPerm extractEntry test/cases/snippets/input.toffee
127 silly gunzTarPerm extractEntry test/cases/snippets/output.toffee
128 silly gunzTarPerm extractEntry test/cases/special_cases/input.toffee
129 silly gunzTarPerm extractEntry test/cases/special_cases/output.toffee
130 silly gunzTarPerm extractEntry test/express3/package.json
131 silly gunzTarPerm extractEntry test/express3/app.coffee
132 silly gunzTarPerm extractEntry test/express3/public/javascripts/test_cases.js
133 silly gunzTarPerm extractEntry test/express3/public/javascripts/toffee.js
134 silly gunzTarPerm extractEntry test/express3/public/stylesheets/style.css
135 silly gunzTarPerm extractEntry test/express3/routes/index.js
136 silly gunzTarPerm extractEntry test/express3/views/index.toffee
137 silly gunzTarPerm extractEntry test/express3/views/subdir1/hello_world.toffee
138 silly gunzTarPerm extractEntry test/express3/views/subdir2/foo/goodbye.toffee
139 silly gunzTarPerm extractEntry test/express3/views/subdir2/goodbye_world.toffee
140 silly gunzTarPerm extractEntry test/run_cases.coffee
141 silly gunzTarPerm extractEntry bin/toffee
142 verbose read json /Users/chris/opt/node/lib/node_modules/toffee/package.json
143 silly lockFile 4fe082c3-opt-node-lib-node-modules-toffee /Users/chris/opt/node/lib/node_modules/toffee
144 info preinstall toffee@0.0.55
145 verbose from cache /Users/chris/opt/node/lib/node_modules/toffee/package.json
146 verbose readDependencies using package.json deps
147 verbose from cache /Users/chris/opt/node/lib/node_modules/toffee/package.json
148 verbose readDependencies using package.json deps
149 verbose cache add [ 'coffee-script@*', null ]
150 silly cache add name=undefined spec="coffee-script@*" args=["coffee-script@*",null]
151 verbose parsed url { pathname: 'coffee-script@*',
151 verbose parsed url   path: 'coffee-script@*',
151 verbose parsed url   href: 'coffee-script@*' }
152 silly cache add name="coffee-script" spec="*" args=["coffee-script","*"]
153 verbose parsed url { pathname: '*', path: '*', href: '*' }
154 verbose addNamed [ 'coffee-script', '*' ]
155 verbose addNamed [ null, '' ]
156 silly lockFile 7281919f-coffee-script coffee-script@*
157 verbose lock coffee-script@* /Users/chris/.npm/7281919f-coffee-script.lock
158 verbose cache add [ 'commander@*', null ]
159 silly cache add name=undefined spec="commander@*" args=["commander@*",null]
160 verbose parsed url { pathname: 'commander@*',
160 verbose parsed url   path: 'commander@*',
160 verbose parsed url   href: 'commander@*' }
161 silly cache add name="commander" spec="*" args=["commander","*"]
162 verbose parsed url { pathname: '*', path: '*', href: '*' }
163 verbose addNamed [ 'commander', '*' ]
164 verbose addNamed [ null, '' ]
165 silly lockFile bb4edd54-commander commander@*
166 verbose lock commander@* /Users/chris/.npm/bb4edd54-commander.lock
167 silly addNameRange { name: 'coffee-script', range: '', hasData: false }
168 silly addNameRange { name: 'commander', range: '', hasData: false }
169 verbose cache add [ 'uglify-js@2.*', null ]
170 silly cache add name=undefined spec="uglify-js@2.*" args=["uglify-js@2.*",null]
171 verbose parsed url { pathname: 'uglify-js@2.*',
171 verbose parsed url   path: 'uglify-js@2.*',
171 verbose parsed url   href: 'uglify-js@2.*' }
172 silly cache add name="uglify-js" spec="2.*" args=["uglify-js","2.*"]
173 verbose parsed url { pathname: '2.*', path: '2.*', href: '2.*' }
174 verbose addNamed [ 'uglify-js', '2.*' ]
175 verbose addNamed [ null, null ]
176 silly lockFile b212aa3a-uglify-js-2 uglify-js@2.*
177 verbose lock uglify-js@2.* /Users/chris/.npm/b212aa3a-uglify-js-2.lock
178 verbose cache add [ 'mkdirp@*', null ]
179 silly cache add name=undefined spec="mkdirp@*" args=["mkdirp@*",null]
180 verbose parsed url { pathname: 'mkdirp@*', path: 'mkdirp@*', href: 'mkdirp@*' }
181 silly cache add name="mkdirp" spec="*" args=["mkdirp","*"]
182 verbose parsed url { pathname: '*', path: '*', href: '*' }
183 verbose addNamed [ 'mkdirp', '*' ]
184 verbose addNamed [ null, '' ]
185 silly lockFile 49c57f5b-mkdirp mkdirp@*
186 verbose lock mkdirp@* /Users/chris/.npm/49c57f5b-mkdirp.lock
187 info addNameTag [ 'uglify-js', '2.*' ]
188 silly addNameRange { name: 'mkdirp', range: '', hasData: false }
189 verbose url raw uglify-js
190 verbose url resolving [ 'https://registry.npmjs.org/', './uglify-js' ]
191 verbose url resolved https://registry.npmjs.org/uglify-js
192 info trying registry request attempt 1 at 16:11:49
193 verbose etag "AHI9F61KLPJJN4WYGDN7OX7H0"
194 http GET https://registry.npmjs.org/uglify-js
195 verbose url raw mkdirp
196 verbose url resolving [ 'https://registry.npmjs.org/', './mkdirp' ]
197 verbose url resolved https://registry.npmjs.org/mkdirp
198 info trying registry request attempt 1 at 16:11:49
199 verbose etag "AHKPZ9B5R2AVAN24CLVUD937X"
200 http GET https://registry.npmjs.org/mkdirp
201 verbose url raw coffee-script
202 verbose url resolving [ 'https://registry.npmjs.org/', './coffee-script' ]
203 verbose url resolved https://registry.npmjs.org/coffee-script
204 info trying registry request attempt 1 at 16:11:49
205 verbose etag "96H60LNOAJQ447JQ4LR8VIIT9"
206 http GET https://registry.npmjs.org/coffee-script
207 verbose url raw commander
208 verbose url resolving [ 'https://registry.npmjs.org/', './commander' ]
209 verbose url resolved https://registry.npmjs.org/commander
210 info trying registry request attempt 1 at 16:11:49
211 verbose etag "GTZB232PHS8O5H1JBATDET4Z"
212 http GET https://registry.npmjs.org/commander
213 http 304 https://registry.npmjs.org/mkdirp
214 silly registry.get cb [ 304,
214 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
214 silly registry.get     etag: '"AHKPZ9B5R2AVAN24CLVUD937X"',
214 silly registry.get     date: 'Thu, 13 Dec 2012 21:10:57 GMT',
214 silly registry.get     'content-length': '0' } ]
215 verbose etag mkdirp from cache
216 http 304 https://registry.npmjs.org/uglify-js
217 silly registry.get cb [ 304,
217 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
217 silly registry.get     etag: '"AHI9F61KLPJJN4WYGDN7OX7H0"',
217 silly registry.get     date: 'Thu, 13 Dec 2012 21:10:57 GMT',
217 silly registry.get     'content-length': '0' } ]
218 verbose etag uglify-js from cache
219 silly addNameRange number 2 { name: 'mkdirp', range: '', hasData: true }
220 silly addNameRange versions [ 'mkdirp',
220 silly addNameRange   [ '0.0.1',
220 silly addNameRange     '0.0.2',
220 silly addNameRange     '0.0.3',
220 silly addNameRange     '0.0.4',
220 silly addNameRange     '0.0.5',
220 silly addNameRange     '0.0.6',
220 silly addNameRange     '0.0.7',
220 silly addNameRange     '0.1.0',
220 silly addNameRange     '0.2.0',
220 silly addNameRange     '0.2.1',
220 silly addNameRange     '0.2.2',
220 silly addNameRange     '0.3.0',
220 silly addNameRange     '0.3.1',
220 silly addNameRange     '0.3.2',
220 silly addNameRange     '0.3.3',
220 silly addNameRange     '0.3.4' ] ]
221 verbose addNamed [ 'mkdirp', '0.3.4' ]
222 verbose addNamed [ '0.3.4', '0.3.4' ]
223 silly lockFile 86f43333-mkdirp-0-3-4 mkdirp@0.3.4
224 verbose lock mkdirp@0.3.4 /Users/chris/.npm/86f43333-mkdirp-0-3-4.lock
225 silly lockFile b212aa3a-uglify-js-2 uglify-js@2.*
226 verbose read json /Users/chris/.npm/mkdirp/0.3.4/package/package.json
227 verbose about to build /Users/chris/opt/node/lib/node_modules/toffee
228 info /Users/chris/opt/node/lib/node_modules/toffee unbuild
229 verbose from cache /Users/chris/opt/node/lib/node_modules/toffee/package.json
230 info preuninstall toffee@0.0.55
231 info uninstall toffee@0.0.55
232 verbose true,/Users/chris/opt/node/lib/node_modules,/Users/chris/opt/node/lib/node_modules unbuild toffee@0.0.55
233 verbose /Users/chris/opt/node/bin,[object Object] binRoot
234 info postuninstall toffee@0.0.55
235 silly lockFile 86f43333-mkdirp-0-3-4 mkdirp@0.3.4
236 silly lockFile 49c57f5b-mkdirp mkdirp@*
237 error Error: No compatible version found: uglify-js@'2.*'
237 error Valid install targets:
237 error ["0.0.1","0.0.2","0.0.3","0.0.4","0.0.5","1.0.1","1.0.2","1.0.3","1.0.4","1.0.5","1.0.6","1.0.7","1.1.0","1.1.1","1.2.0","1.2.1","1.2.2","1.2.3","1.2.4","1.2.5","1.2.6","1.3.0","1.3.1","1.3.2","1.3.3","1.3.4","2.2.0","2.2.1","2.2.2"]
237 error     at installTargetsError (/Users/chris/opt/node/lib/node_modules/npm/lib/cache.js:563:10)
237 error     at /Users/chris/opt/node/lib/node_modules/npm/lib/cache.js:478:10
237 error     at saved (/Users/chris/opt/node/lib/node_modules/npm/node_modules/npm-registry-client/lib/get.js:138:7)
237 error     at /Users/chris/opt/node/lib/node_modules/npm/node_modules/graceful-fs/graceful-fs.js:218:7
237 error     at Object.oncomplete (fs.js:297:15)
238 error If you need help, you may report this log at:
238 error     <http://github.com/isaacs/npm/issues>
238 error or email it to:
238 error     <npm-@googlegroups.com>
239 error System Darwin 12.2.0
240 error command "/Users/chris/opt/node/bin/node" "/Users/chris/opt/node/bin/npm" "install" "-g" "toffee"
241 error cwd /Users/chris/git/toffee
242 error node -v v0.8.15
243 error npm -v 1.1.66
244 verbose exit [ 1, true ]
